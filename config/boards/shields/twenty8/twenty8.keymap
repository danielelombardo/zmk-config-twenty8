#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define abc_shft &mrl RSHIFT 0
#define ARCHIVE &kp LC(LS(N1))
#define TEAMSMUTE &kp LC(LS(M))

&caps_word {
    continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT>;
};

/ { 
    behaviors {
        mg: mom_toggle_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "MOM_TOGGLE_LAYERS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&mo>, <&tog>;
        };
        mrl: mod_reset_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_RESET_LAYERS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&to>;
        };
        mkp: mom_key_press {
            compatible = "zmk,behavior-hold-tap";
            label = "MOM_KEY_PRESS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };        
        hm: home_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
    macros {
        rls_mods: rls_mods {
            compatible = "zmk,behavior-macro";
            label = "ZM_rls_mods";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_backspace {
            timeout-ms = <70>;
            key-positions = <4 5>;
            bindings = <&kp BKSP>;
            layers = <0>;
        };
        combo_enter {
            timeout-ms = <70>;
            key-positions = <0 1>;
            bindings = <&kp ENTER>;
            layers = <0>;
        };
    };
 
    keymap {
        compatible = "zmk,keymap";
        //       0  1  2    3  4  5  
        // 6  7  8  9  10   11 12 13 14 15
        // 16 17 18 19 20   21 22 23 24 25
        //             26   27
        abc {
            bindings = <
                                   &kp W       &kp E       &kp R       &kp U       &kp I       &kp O
                &kp Q    &mkp 3 A  &hm LGUI S  &hm LALT D  &hm LCTL T  &hm RCTL H  &hm RALT N  &hm RGUI L  &mkp 3 P  &kp J
                &kp Z    &kp X     &kp C       &kp V       &kp F       &kp B       &kp M       &kp G       &kp Y     &kp K
                                                           &mg 1 1     &hm RSHIFT SPACE
            >;
        };

        nav {
            bindings = <
                                      &caps_word  &kp LC(C)  &kp LC(V)  &kp HOME  &kp UP    &kp END  
                &kp ESC    &kp ENTER  &kt LSHFT   &kt LALT   &kt LCTRL  &kp LEFT  &kp DOWN  &kp RIGHT &kp BKSP  ARCHIVE
                &rls_mods  &kp TAB    &kp LC(X)   &kp LC(Z)  &kp LC(Y)  &kp INS   &kp PG_UP &kp PG_DN &kp DEL   &kp LA(F4)
                                                             &tog 2     abc_shft
            >;
        };
    
        num {
            bindings = <
                                  &kp N3       &kp N2       &kp N1       &kp N6       &kp N7       &kp N8
                &kp ENTER &kp N4  &hm LGUI F3  &hm LALT F2  &hm LCTL F1  &hm RCTL F7  &hm RALT F8  &hm RGUI F9  &kp N9  &kp BKSP
                &none     &kp N5  &kp F6       &kp F5       &kp F4       &kp F10      &kp F11      &kp F12      &kp N0  &none
                                                            &tog 3       abc_shft
            >;
        };    
    
        sym {
            bindings = <
                                         &kp SEMI    &kp COMMA     &kp DOT       &kp MINUS  &kp SQT   &kp EQUAL
                &none        &bt BT_NXT  &kp C_MUTE  &kp C_BRI_UP  &kp C_VOL_UP  &kp LBKT   &kp RBKT  &kp BSLH  &kp SLASH &none
                &bootloader  &bt BT_CLR  &none       &kp C_BRI_DN  &kp C_VOL_DN  &none      &none     &none     &kp GRAVE &bootloader
                                                                   &mrl LCTL 0   abc_shft
            >;
        };
    };
};
